basePath: /
definitions:
  database.Song:
    properties:
      groupName:
        example: Muse
        type: string
      id:
        example: 1
        type: integer
      link:
        example: https://www.youtube.com/watch?v=Xsp3_a-PMTw
        type: string
      releaseDate:
        example: 16.07.2006
        type: string
      song:
        example: Supermassive Black Hole
        type: string
      songText:
        example: Ooh baby, don't you know I suffer?...
        type: string
    type: object
  handlers.CreateSongRequest:
    properties:
      group:
        example: Muse
        type: string
      song:
        example: Supermassive Black Hole
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing songs.
  title: Song API
  version: "1.0"
paths:
  /songs:
    get:
      description: Retrieves a list of all songs.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Song'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all songs
    post:
      consumes:
      - application/json
      description: Creates a new song.
      parameters:
      - description: Song data
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateSongRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/database.Song'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create a new song
  /songs/{id}:
    delete:
      description: Deletes a song by its ID.
      parameters:
      - description: Song ID
        in: query
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete a song
    get:
      description: Retrieves a song by its ID.
      parameters:
      - description: Song ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Song'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get song by ID
    put:
      consumes:
      - application/json
      description: Updates an existing song.
      parameters:
      - description: Song ID
        in: query
        name: id
        required: true
        type: integer
      - description: Song data
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/database.Song'
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update an existing song
swagger: "2.0"
